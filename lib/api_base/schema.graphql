type Query {
  Scientific_Circles_Tags(filter: Scientific_Circles_Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Scientific_Circles_Tags!]!
  Scientific_Circles_Tags_by_id(id: ID!, version: String): Scientific_Circles_Tags
  Scientific_Circles_Tags_aggregated(groupBy: [String], filter: Scientific_Circles_Tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Scientific_Circles_Tags_aggregated!]!
  Scientific_Circles_Tags_by_version(version: String!, id: ID!): version_Scientific_Circles_Tags
  Tags(filter: Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Tags!]!
  Tags_by_id(id: ID!, version: String): Tags
  Tags_aggregated(groupBy: [String], filter: Tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Tags_aggregated!]!
  Tags_by_version(version: String!, id: ID!): version_Tags
  Posts_Tags(filter: Posts_Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Posts_Tags!]!
  Posts_Tags_by_id(id: ID!, version: String): Posts_Tags
  Posts_Tags_aggregated(groupBy: [String], filter: Posts_Tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Posts_Tags_aggregated!]!
  Posts_Tags_by_version(version: String!, id: ID!): version_Posts_Tags
  Scientific_Circles_Links(filter: Scientific_Circles_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Scientific_Circles_Links!]!
  Scientific_Circles_Links_by_id(id: ID!, version: String): Scientific_Circles_Links
  Scientific_Circles_Links_aggregated(groupBy: [String], filter: Scientific_Circles_Links_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Scientific_Circles_Links_aggregated!]!
  Scientific_Circles_Links_by_version(version: String!, id: ID!): version_Scientific_Circles_Links
  Scientific_Circles(filter: Scientific_Circles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Scientific_Circles!]!
  Scientific_Circles_by_id(id: ID!, version: String): Scientific_Circles
  Scientific_Circles_aggregated(groupBy: [String], filter: Scientific_Circles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Scientific_Circles_aggregated!]!
  Scientific_Circles_by_version(version: String!, id: ID!): version_Scientific_Circles
  Posts(filter: Posts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Posts!]!
  Posts_by_id(id: ID!, version: String): Posts
  Posts_aggregated(groupBy: [String], filter: Posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Posts_aggregated!]!
  Posts_by_version(version: String!, id: ID!): version_Posts
  Buildings(filter: Buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Buildings!]!
  Buildings_by_id(id: ID!, version: String): Buildings
  Buildings_aggregated(groupBy: [String], filter: Buildings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Buildings_aggregated!]!
  Buildings_by_version(version: String!, id: ID!): version_Buildings
  AcademicCalendarData(version: String): AcademicCalendarData
  AcademicCalendarData_by_version(version: String!): version_AcademicCalendarData
  WeekExceptions(filter: WeekExceptions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [WeekExceptions!]!
  WeekExceptions_by_id(id: ID!, version: String): WeekExceptions
  WeekExceptions_aggregated(groupBy: [String], filter: WeekExceptions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [WeekExceptions_aggregated!]!
  WeekExceptions_by_version(version: String!, id: ID!): version_WeekExceptions
  AboutUs(version: String): AboutUs
  AboutUs_by_version(version: String!): version_AboutUs
  AboutUs_Team(filter: AboutUs_Team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [AboutUs_Team!]!
  AboutUs_Team_by_id(id: ID!, version: String): AboutUs_Team
  AboutUs_Team_aggregated(groupBy: [String], filter: AboutUs_Team_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [AboutUs_Team_aggregated!]!
  AboutUs_Team_by_version(version: String!, id: ID!): version_AboutUs_Team
  AboutUs_Team_Social_Links(filter: AboutUs_Team_Social_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [AboutUs_Team_Social_Links!]!
  AboutUs_Team_Social_Links_by_id(id: ID!, version: String): AboutUs_Team_Social_Links
  AboutUs_Team_Social_Links_aggregated(groupBy: [String], filter: AboutUs_Team_Social_Links_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [AboutUs_Team_Social_Links_aggregated!]!
  AboutUs_Team_Social_Links_by_version(version: String!, id: ID!): version_AboutUs_Team_Social_Links
  AboutUs_Solvro_Social_Links(filter: AboutUs_Solvro_Social_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [AboutUs_Solvro_Social_Links!]!
  AboutUs_Solvro_Social_Links_by_id(id: ID!, version: String): AboutUs_Solvro_Social_Links
  AboutUs_Solvro_Social_Links_aggregated(groupBy: [String], filter: AboutUs_Solvro_Social_Links_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [AboutUs_Solvro_Social_Links_aggregated!]!
  AboutUs_Solvro_Social_Links_by_version(version: String!, id: ID!): version_AboutUs_Solvro_Social_Links
  Departments(filter: Departments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Departments!]!
  Departments_by_id(id: ID!, version: String): Departments
  Departments_aggregated(groupBy: [String], filter: Departments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Departments_aggregated!]!
  Departments_by_version(version: String!, id: ID!): version_Departments
  FAQ(filter: FAQ_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FAQ!]!
  FAQ_by_id(id: ID!, version: String): FAQ
  FAQ_aggregated(groupBy: [String], filter: FAQ_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [FAQ_aggregated!]!
  FAQ_by_version(version: String!, id: ID!): version_FAQ
  FAQ_Types_FAQ(filter: FAQ_Types_FAQ_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FAQ_Types_FAQ!]!
  FAQ_Types_FAQ_by_id(id: ID!, version: String): FAQ_Types_FAQ
  FAQ_Types_FAQ_aggregated(groupBy: [String], filter: FAQ_Types_FAQ_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [FAQ_Types_FAQ_aggregated!]!
  FAQ_Types_FAQ_by_version(version: String!, id: ID!): version_FAQ_Types_FAQ
  FAQ_Types(filter: FAQ_Types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FAQ_Types!]!
  FAQ_Types_by_id(id: ID!, version: String): FAQ_Types
  FAQ_Types_aggregated(groupBy: [String], filter: FAQ_Types_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [FAQ_Types_aggregated!]!
  FAQ_Types_by_version(version: String!, id: ID!): version_FAQ_Types
  Departments_Links(filter: Departments_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Departments_Links!]!
  Departments_Links_by_id(id: ID!, version: String): Departments_Links
  Departments_Links_aggregated(groupBy: [String], filter: Departments_Links_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Departments_Links_aggregated!]!
  Departments_Links_by_version(version: String!, id: ID!): version_Departments_Links
  FieldOfStudy(filter: FieldOfStudy_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FieldOfStudy!]!
  FieldOfStudy_by_id(id: ID!, version: String): FieldOfStudy
  FieldOfStudy_aggregated(groupBy: [String], filter: FieldOfStudy_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [FieldOfStudy_aggregated!]!
  FieldOfStudy_by_version(version: String!, id: ID!): version_FieldOfStudy
}

type Scientific_Circles_Tags {
  id: ID!
  Scientific_Circles_id(filter: Scientific_Circles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Scientific_Circles
  Tags_id(filter: Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Tags
}

type Scientific_Circles {
  id: ID!
  status: String
  sort: Int
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  name: String!
  logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  cover(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  description: String
  type: String
  source: String
  shortDescription: String
  department(filter: Departments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Departments
  desc2: String
  tags(filter: Scientific_Circles_Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Scientific_Circles_Tags]
  tags_func: count_functions
  links(filter: Scientific_Circles_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Scientific_Circles_Links]
  links_func: count_functions
}

"""ISO8601 Date values"""
scalar Date

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder: String
  uploaded_by: String
  uploaded_on: Date
  uploaded_on_func: datetime_functions
  modified_by: String
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
}

"""BigInt value"""
scalar GraphQLBigInt

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type count_functions {
  count: Int
}

input directus_files_filter {
  id: string_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: string_filter_operators
  uploaded_by: string_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  modified_by: string_filter_operators
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

"""A Float or a String"""
scalar GraphQLStringOrFloat

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input count_function_filter_operators {
  count: number_filter_operators
}

type Departments {
  id: ID!
  name: String!
  logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  description: String
  code: String!
  gradient_start: String
  gradient_end: String
  address: String
  betterCode: String
  links(filter: Departments_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Departments_Links]
  links_func: count_functions
  fieldsOfStudies(filter: FieldOfStudy_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FieldOfStudy]
  fieldsOfStudies_func: count_functions
}

type Departments_Links {
  id: ID!
  name: String
  link: String
  department_id(filter: Departments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Departments
}

input Departments_filter {
  id: number_filter_operators
  name: string_filter_operators
  logo: directus_files_filter
  description: string_filter_operators
  code: string_filter_operators
  gradient_start: string_filter_operators
  gradient_end: string_filter_operators
  address: string_filter_operators
  betterCode: string_filter_operators
  links: Departments_Links_filter
  links_func: count_function_filter_operators
  fieldsOfStudies: FieldOfStudy_filter
  fieldsOfStudies_func: count_function_filter_operators
  _and: [Departments_filter]
  _or: [Departments_filter]
}

input Departments_Links_filter {
  id: number_filter_operators
  name: string_filter_operators
  link: string_filter_operators
  department_id: Departments_filter
  _and: [Departments_Links_filter]
  _or: [Departments_Links_filter]
}

input FieldOfStudy_filter {
  id: number_filter_operators
  department_id: Departments_filter
  name: string_filter_operators
  url: string_filter_operators
  isEnglish: boolean_filter_operators
  is2ndDegree: boolean_filter_operators
  isLongCycleStudies: boolean_filter_operators
  hasWeekendModeOption: boolean_filter_operators
  _and: [FieldOfStudy_filter]
  _or: [FieldOfStudy_filter]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

type FieldOfStudy {
  id: ID!
  department_id(filter: Departments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Departments
  name: String!
  url: String
  isEnglish: Boolean
  is2ndDegree: Boolean
  isLongCycleStudies: Boolean
  hasWeekendModeOption: Boolean
}

input Scientific_Circles_Tags_filter {
  id: number_filter_operators
  Scientific_Circles_id: Scientific_Circles_filter
  Tags_id: Tags_filter
  _and: [Scientific_Circles_Tags_filter]
  _or: [Scientific_Circles_Tags_filter]
}

input Scientific_Circles_filter {
  id: number_filter_operators
  status: string_filter_operators
  sort: number_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  name: string_filter_operators
  logo: directus_files_filter
  cover: directus_files_filter
  description: string_filter_operators
  type: string_filter_operators
  source: string_filter_operators
  shortDescription: string_filter_operators
  department: Departments_filter
  desc2: string_filter_operators
  tags: Scientific_Circles_Tags_filter
  tags_func: count_function_filter_operators
  links: Scientific_Circles_Links_filter
  links_func: count_function_filter_operators
  _and: [Scientific_Circles_filter]
  _or: [Scientific_Circles_filter]
}

input Scientific_Circles_Links_filter {
  id: number_filter_operators
  name: string_filter_operators
  link: string_filter_operators
  scientific_circle_id: Scientific_Circles_filter
  _and: [Scientific_Circles_Links_filter]
  _or: [Scientific_Circles_Links_filter]
}

input Tags_filter {
  id: number_filter_operators
  name: string_filter_operators
  _and: [Tags_filter]
  _or: [Tags_filter]
}

type Scientific_Circles_Links {
  id: ID!
  name: String
  link: String
  scientific_circle_id(filter: Scientific_Circles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Scientific_Circles
}

type Tags {
  id: ID!
  name: String!
}

type Scientific_Circles_Tags_aggregated {
  group: JSON
  countAll: Int
  count: Scientific_Circles_Tags_aggregated_count
  countDistinct: Scientific_Circles_Tags_aggregated_count
  avg: Scientific_Circles_Tags_aggregated_fields
  sum: Scientific_Circles_Tags_aggregated_fields
  avgDistinct: Scientific_Circles_Tags_aggregated_fields
  sumDistinct: Scientific_Circles_Tags_aggregated_fields
  min: Scientific_Circles_Tags_aggregated_fields
  max: Scientific_Circles_Tags_aggregated_fields
}

type Scientific_Circles_Tags_aggregated_count {
  id: Int
  Scientific_Circles_id: Int
  Tags_id: Int
}

type Scientific_Circles_Tags_aggregated_fields {
  id: Float
  Scientific_Circles_id: Float
  Tags_id: Float
}

""""""
type version_Scientific_Circles_Tags {
  id: ID!
  Scientific_Circles_id: JSON
  Tags_id: JSON
}

type Tags_aggregated {
  group: JSON
  countAll: Int
  count: Tags_aggregated_count
  countDistinct: Tags_aggregated_count
  avg: Tags_aggregated_fields
  sum: Tags_aggregated_fields
  avgDistinct: Tags_aggregated_fields
  sumDistinct: Tags_aggregated_fields
  min: Tags_aggregated_fields
  max: Tags_aggregated_fields
}

type Tags_aggregated_count {
  id: Int
  name: Int
}

type Tags_aggregated_fields {
  id: Float
}

""""""
type version_Tags {
  id: ID!
  name: String!
}

type Posts_Tags {
  id: ID!
  Posts_id(filter: Posts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Posts
  Tags_id(filter: Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Tags
}

type Posts {
  id: ID!
  status: String
  sort: Int
  user_created: String
  date_created: Date
  date_created_func: datetime_functions
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  content: String
  title: String!
  department(filter: Departments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Departments
  cover(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  tags(filter: Posts_Tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Posts_Tags]
  tags_func: count_functions
}

input Posts_Tags_filter {
  id: number_filter_operators
  Posts_id: Posts_filter
  Tags_id: Tags_filter
  _and: [Posts_Tags_filter]
  _or: [Posts_Tags_filter]
}

input Posts_filter {
  id: number_filter_operators
  status: string_filter_operators
  sort: number_filter_operators
  user_created: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  department: Departments_filter
  cover: directus_files_filter
  tags: Posts_Tags_filter
  tags_func: count_function_filter_operators
  _and: [Posts_filter]
  _or: [Posts_filter]
}

type Posts_Tags_aggregated {
  group: JSON
  countAll: Int
  count: Posts_Tags_aggregated_count
  countDistinct: Posts_Tags_aggregated_count
  avg: Posts_Tags_aggregated_fields
  sum: Posts_Tags_aggregated_fields
  avgDistinct: Posts_Tags_aggregated_fields
  sumDistinct: Posts_Tags_aggregated_fields
  min: Posts_Tags_aggregated_fields
  max: Posts_Tags_aggregated_fields
}

type Posts_Tags_aggregated_count {
  id: Int
  Posts_id: Int
  Tags_id: Int
}

type Posts_Tags_aggregated_fields {
  id: Float
  Posts_id: Float
  Tags_id: Float
}

""""""
type version_Posts_Tags {
  id: ID!
  Posts_id: JSON
  Tags_id: JSON
}

type Scientific_Circles_Links_aggregated {
  group: JSON
  countAll: Int
  count: Scientific_Circles_Links_aggregated_count
  countDistinct: Scientific_Circles_Links_aggregated_count
  avg: Scientific_Circles_Links_aggregated_fields
  sum: Scientific_Circles_Links_aggregated_fields
  avgDistinct: Scientific_Circles_Links_aggregated_fields
  sumDistinct: Scientific_Circles_Links_aggregated_fields
  min: Scientific_Circles_Links_aggregated_fields
  max: Scientific_Circles_Links_aggregated_fields
}

type Scientific_Circles_Links_aggregated_count {
  id: Int
  name: Int
  link: Int
  scientific_circle_id: Int
}

type Scientific_Circles_Links_aggregated_fields {
  id: Float
  scientific_circle_id: Float
}

""""""
type version_Scientific_Circles_Links {
  id: ID!
  name: String
  link: String
  scientific_circle_id: JSON
}

type Scientific_Circles_aggregated {
  group: JSON
  countAll: Int
  count: Scientific_Circles_aggregated_count
  countDistinct: Scientific_Circles_aggregated_count
  avg: Scientific_Circles_aggregated_fields
  sum: Scientific_Circles_aggregated_fields
  avgDistinct: Scientific_Circles_aggregated_fields
  sumDistinct: Scientific_Circles_aggregated_fields
  min: Scientific_Circles_aggregated_fields
  max: Scientific_Circles_aggregated_fields
}

type Scientific_Circles_aggregated_count {
  id: Int
  status: Int
  sort: Int
  date_created: Int
  date_updated: Int
  name: Int
  logo: Int
  cover: Int
  description: Int
  type: Int
  source: Int
  shortDescription: Int
  department: Int
  desc2: Int
  tags: Int
  links: Int
}

type Scientific_Circles_aggregated_fields {
  id: Float
  sort: Float
  department: Float
}

""""""
type version_Scientific_Circles {
  id: ID!
  status: String
  sort: Int
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  name: String!
  logo: JSON
  cover: JSON
  description: String
  type: String
  source: String
  shortDescription: String
  department: JSON
  desc2: String
  tags: JSON
  tags_func: count_functions
  links: JSON
  links_func: count_functions
}

type Posts_aggregated {
  group: JSON
  countAll: Int
  count: Posts_aggregated_count
  countDistinct: Posts_aggregated_count
  avg: Posts_aggregated_fields
  sum: Posts_aggregated_fields
  avgDistinct: Posts_aggregated_fields
  sumDistinct: Posts_aggregated_fields
  min: Posts_aggregated_fields
  max: Posts_aggregated_fields
}

type Posts_aggregated_count {
  id: Int
  status: Int
  sort: Int
  user_created: Int
  date_created: Int
  user_updated: Int
  date_updated: Int
  content: Int
  title: Int
  department: Int
  cover: Int
  tags: Int
}

type Posts_aggregated_fields {
  id: Float
  sort: Float
  department: Float
}

""""""
type version_Posts {
  id: ID!
  status: String
  sort: Int
  user_created: String
  date_created: Date
  date_created_func: datetime_functions
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  content: String
  title: String!
  department: JSON
  cover: JSON
  tags: JSON
  tags_func: count_functions
}

type Buildings {
  id: ID!
  name: String!
  latitude: Float!
  longitude: Float!
  addres: String
  cover(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  food: Boolean
  naturalName: String
}

input Buildings_filter {
  id: number_filter_operators
  name: string_filter_operators
  latitude: number_filter_operators
  longitude: number_filter_operators
  addres: string_filter_operators
  cover: directus_files_filter
  food: boolean_filter_operators
  naturalName: string_filter_operators
  _and: [Buildings_filter]
  _or: [Buildings_filter]
}

type Buildings_aggregated {
  group: JSON
  countAll: Int
  count: Buildings_aggregated_count
  countDistinct: Buildings_aggregated_count
  avg: Buildings_aggregated_fields
  sum: Buildings_aggregated_fields
  avgDistinct: Buildings_aggregated_fields
  sumDistinct: Buildings_aggregated_fields
  min: Buildings_aggregated_fields
  max: Buildings_aggregated_fields
}

type Buildings_aggregated_count {
  id: Int
  name: Int
  latitude: Int
  longitude: Int
  addres: Int
  cover: Int
  food: Int
  naturalName: Int
}

type Buildings_aggregated_fields {
  id: Float
  latitude: Float
  longitude: Float
}

""""""
type version_Buildings {
  id: ID!
  name: String!
  latitude: Float!
  longitude: Float!
  addres: String
  cover: JSON
  food: Boolean
  naturalName: String
}

type AcademicCalendarData {
  id: ID!
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  semesterStartDate: Date!
  semesterStartDate_func: date_functions
  examSessionStartDate: Date!
  examSessionStartDate_func: date_functions
  isFirstWeekEven: Boolean!
  examSessionLastDay: Date!
  examSessionLastDay_func: date_functions
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

""""""
type version_AcademicCalendarData {
  id: ID!
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  semesterStartDate: Date!
  semesterStartDate_func: date_functions
  examSessionStartDate: Date!
  examSessionStartDate_func: date_functions
  isFirstWeekEven: Boolean!
  examSessionLastDay: Date!
  examSessionLastDay_func: date_functions
}

type WeekExceptions {
  id: ID!
  day: Date!
  day_func: date_functions
  changedWeekday: String!
  changedDayIsEven: Boolean!
}

input WeekExceptions_filter {
  id: number_filter_operators
  day: date_filter_operators
  day_func: date_function_filter_operators
  changedWeekday: string_filter_operators
  changedDayIsEven: boolean_filter_operators
  _and: [WeekExceptions_filter]
  _or: [WeekExceptions_filter]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

type WeekExceptions_aggregated {
  group: JSON
  countAll: Int
  count: WeekExceptions_aggregated_count
  countDistinct: WeekExceptions_aggregated_count
  avg: WeekExceptions_aggregated_fields
  sum: WeekExceptions_aggregated_fields
  avgDistinct: WeekExceptions_aggregated_fields
  sumDistinct: WeekExceptions_aggregated_fields
  min: WeekExceptions_aggregated_fields
  max: WeekExceptions_aggregated_fields
}

type WeekExceptions_aggregated_count {
  id: Int
  day: Int
  changedWeekday: Int
  changedDayIsEven: Int
}

type WeekExceptions_aggregated_fields {
  id: Float
}

""""""
type version_WeekExceptions {
  id: ID!
  day: Date!
  day_func: date_functions
  changedWeekday: String!
  changedDayIsEven: Boolean!
}

type AboutUs {
  id: ID!
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  description: String!
  cover(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  solvroSocialLinks(filter: AboutUs_Solvro_Social_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [AboutUs_Solvro_Social_Links]
  solvroSocialLinks_func: count_functions
}

type AboutUs_Solvro_Social_Links {
  id: ID!
  url: String!
  parent_id(filter: AboutUs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): AboutUs
}

input AboutUs_filter {
  id: number_filter_operators
  user_updated: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  description: string_filter_operators
  cover: directus_files_filter
  solvroSocialLinks: AboutUs_Solvro_Social_Links_filter
  solvroSocialLinks_func: count_function_filter_operators
  _and: [AboutUs_filter]
  _or: [AboutUs_filter]
}

input AboutUs_Solvro_Social_Links_filter {
  id: number_filter_operators
  url: string_filter_operators
  parent_id: AboutUs_filter
  _and: [AboutUs_Solvro_Social_Links_filter]
  _or: [AboutUs_Solvro_Social_Links_filter]
}

""""""
type version_AboutUs {
  id: ID!
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  description: String!
  cover: JSON
  solvroSocialLinks: JSON
  solvroSocialLinks_func: count_functions
}

type AboutUs_Team {
  id: ID!
  name: String!
  subtitle: String
  photo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  socialLinks(filter: AboutUs_Team_Social_Links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [AboutUs_Team_Social_Links]
  socialLinks_func: count_functions
}

type AboutUs_Team_Social_Links {
  id: ID!
  url: String!
  team_member_id(filter: AboutUs_Team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): AboutUs_Team
}

input AboutUs_Team_filter {
  id: number_filter_operators
  name: string_filter_operators
  subtitle: string_filter_operators
  photo: directus_files_filter
  socialLinks: AboutUs_Team_Social_Links_filter
  socialLinks_func: count_function_filter_operators
  _and: [AboutUs_Team_filter]
  _or: [AboutUs_Team_filter]
}

input AboutUs_Team_Social_Links_filter {
  id: number_filter_operators
  url: string_filter_operators
  team_member_id: AboutUs_Team_filter
  _and: [AboutUs_Team_Social_Links_filter]
  _or: [AboutUs_Team_Social_Links_filter]
}

type AboutUs_Team_aggregated {
  group: JSON
  countAll: Int
  count: AboutUs_Team_aggregated_count
  countDistinct: AboutUs_Team_aggregated_count
  avg: AboutUs_Team_aggregated_fields
  sum: AboutUs_Team_aggregated_fields
  avgDistinct: AboutUs_Team_aggregated_fields
  sumDistinct: AboutUs_Team_aggregated_fields
  min: AboutUs_Team_aggregated_fields
  max: AboutUs_Team_aggregated_fields
}

type AboutUs_Team_aggregated_count {
  id: Int
  name: Int
  subtitle: Int
  photo: Int
  socialLinks: Int
}

type AboutUs_Team_aggregated_fields {
  id: Float
}

""""""
type version_AboutUs_Team {
  id: ID!
  name: String!
  subtitle: String
  photo: JSON
  socialLinks: JSON
  socialLinks_func: count_functions
}

type AboutUs_Team_Social_Links_aggregated {
  group: JSON
  countAll: Int
  count: AboutUs_Team_Social_Links_aggregated_count
  countDistinct: AboutUs_Team_Social_Links_aggregated_count
  avg: AboutUs_Team_Social_Links_aggregated_fields
  sum: AboutUs_Team_Social_Links_aggregated_fields
  avgDistinct: AboutUs_Team_Social_Links_aggregated_fields
  sumDistinct: AboutUs_Team_Social_Links_aggregated_fields
  min: AboutUs_Team_Social_Links_aggregated_fields
  max: AboutUs_Team_Social_Links_aggregated_fields
}

type AboutUs_Team_Social_Links_aggregated_count {
  id: Int
  url: Int
  team_member_id: Int
}

type AboutUs_Team_Social_Links_aggregated_fields {
  id: Float
  team_member_id: Float
}

""""""
type version_AboutUs_Team_Social_Links {
  id: ID!
  url: String!
  team_member_id: JSON
}

type AboutUs_Solvro_Social_Links_aggregated {
  group: JSON
  countAll: Int
  count: AboutUs_Solvro_Social_Links_aggregated_count
  countDistinct: AboutUs_Solvro_Social_Links_aggregated_count
  avg: AboutUs_Solvro_Social_Links_aggregated_fields
  sum: AboutUs_Solvro_Social_Links_aggregated_fields
  avgDistinct: AboutUs_Solvro_Social_Links_aggregated_fields
  sumDistinct: AboutUs_Solvro_Social_Links_aggregated_fields
  min: AboutUs_Solvro_Social_Links_aggregated_fields
  max: AboutUs_Solvro_Social_Links_aggregated_fields
}

type AboutUs_Solvro_Social_Links_aggregated_count {
  id: Int
  url: Int
  parent_id: Int
}

type AboutUs_Solvro_Social_Links_aggregated_fields {
  id: Float
  parent_id: Float
}

""""""
type version_AboutUs_Solvro_Social_Links {
  id: ID!
  url: String!
  parent_id: JSON
}

type Departments_aggregated {
  group: JSON
  countAll: Int
  count: Departments_aggregated_count
  countDistinct: Departments_aggregated_count
  avg: Departments_aggregated_fields
  sum: Departments_aggregated_fields
  avgDistinct: Departments_aggregated_fields
  sumDistinct: Departments_aggregated_fields
  min: Departments_aggregated_fields
  max: Departments_aggregated_fields
}

type Departments_aggregated_count {
  id: Int
  name: Int
  logo: Int
  description: Int
  code: Int
  gradient_start: Int
  gradient_end: Int
  address: Int
  betterCode: Int
  links: Int
  fieldsOfStudies: Int
}

type Departments_aggregated_fields {
  id: Float
}

""""""
type version_Departments {
  id: ID!
  name: String!
  logo: JSON
  description: String
  code: String!
  gradient_start: String
  gradient_end: String
  address: String
  betterCode: String
  links: JSON
  links_func: count_functions
  fieldsOfStudies: JSON
  fieldsOfStudies_func: count_functions
}

type FAQ {
  id: ID!
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  question: String
  answer: String
  type(filter: FAQ_Types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): FAQ_Types
}

type FAQ_Types {
  id: ID!
  name: String
  cover(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  short_description: String
  description: String
  questions(filter: FAQ_Types_FAQ_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [FAQ_Types_FAQ]
  questions_func: count_functions
}

type FAQ_Types_FAQ {
  id: ID!
  FAQ_Types_id(filter: FAQ_Types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): FAQ_Types
  FAQ_id(filter: FAQ_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): FAQ
}

input FAQ_Types_filter {
  id: number_filter_operators
  name: string_filter_operators
  cover: directus_files_filter
  short_description: string_filter_operators
  description: string_filter_operators
  questions: FAQ_Types_FAQ_filter
  questions_func: count_function_filter_operators
  _and: [FAQ_Types_filter]
  _or: [FAQ_Types_filter]
}

input FAQ_Types_FAQ_filter {
  id: number_filter_operators
  FAQ_Types_id: FAQ_Types_filter
  FAQ_id: FAQ_filter
  _and: [FAQ_Types_FAQ_filter]
  _or: [FAQ_Types_FAQ_filter]
}

input FAQ_filter {
  id: number_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  question: string_filter_operators
  answer: string_filter_operators
  type: FAQ_Types_filter
  _and: [FAQ_filter]
  _or: [FAQ_filter]
}

type FAQ_aggregated {
  group: JSON
  countAll: Int
  count: FAQ_aggregated_count
  countDistinct: FAQ_aggregated_count
  avg: FAQ_aggregated_fields
  sum: FAQ_aggregated_fields
  avgDistinct: FAQ_aggregated_fields
  sumDistinct: FAQ_aggregated_fields
  min: FAQ_aggregated_fields
  max: FAQ_aggregated_fields
}

type FAQ_aggregated_count {
  id: Int
  status: Int
  date_created: Int
  date_updated: Int
  question: Int
  answer: Int
  type: Int
}

type FAQ_aggregated_fields {
  id: Float
  type: Float
}

""""""
type version_FAQ {
  id: ID!
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  question: String
  answer: String
  type: JSON
}

type FAQ_Types_FAQ_aggregated {
  group: JSON
  countAll: Int
  count: FAQ_Types_FAQ_aggregated_count
  countDistinct: FAQ_Types_FAQ_aggregated_count
  avg: FAQ_Types_FAQ_aggregated_fields
  sum: FAQ_Types_FAQ_aggregated_fields
  avgDistinct: FAQ_Types_FAQ_aggregated_fields
  sumDistinct: FAQ_Types_FAQ_aggregated_fields
  min: FAQ_Types_FAQ_aggregated_fields
  max: FAQ_Types_FAQ_aggregated_fields
}

type FAQ_Types_FAQ_aggregated_count {
  id: Int
  FAQ_Types_id: Int
  FAQ_id: Int
}

type FAQ_Types_FAQ_aggregated_fields {
  id: Float
  FAQ_Types_id: Float
  FAQ_id: Float
}

""""""
type version_FAQ_Types_FAQ {
  id: ID!
  FAQ_Types_id: JSON
  FAQ_id: JSON
}

type FAQ_Types_aggregated {
  group: JSON
  countAll: Int
  count: FAQ_Types_aggregated_count
  countDistinct: FAQ_Types_aggregated_count
  avg: FAQ_Types_aggregated_fields
  sum: FAQ_Types_aggregated_fields
  avgDistinct: FAQ_Types_aggregated_fields
  sumDistinct: FAQ_Types_aggregated_fields
  min: FAQ_Types_aggregated_fields
  max: FAQ_Types_aggregated_fields
}

type FAQ_Types_aggregated_count {
  id: Int
  name: Int
  cover: Int
  short_description: Int
  description: Int
  questions: Int
}

type FAQ_Types_aggregated_fields {
  id: Float
}

""""""
type version_FAQ_Types {
  id: ID!
  name: String
  cover: JSON
  short_description: String
  description: String
  questions: JSON
  questions_func: count_functions
}

type Departments_Links_aggregated {
  group: JSON
  countAll: Int
  count: Departments_Links_aggregated_count
  countDistinct: Departments_Links_aggregated_count
  avg: Departments_Links_aggregated_fields
  sum: Departments_Links_aggregated_fields
  avgDistinct: Departments_Links_aggregated_fields
  sumDistinct: Departments_Links_aggregated_fields
  min: Departments_Links_aggregated_fields
  max: Departments_Links_aggregated_fields
}

type Departments_Links_aggregated_count {
  id: Int
  name: Int
  link: Int
  department_id: Int
}

type Departments_Links_aggregated_fields {
  id: Float
  department_id: Float
}

""""""
type version_Departments_Links {
  id: ID!
  name: String
  link: String
  department_id: JSON
}

type FieldOfStudy_aggregated {
  group: JSON
  countAll: Int
  count: FieldOfStudy_aggregated_count
  countDistinct: FieldOfStudy_aggregated_count
  avg: FieldOfStudy_aggregated_fields
  sum: FieldOfStudy_aggregated_fields
  avgDistinct: FieldOfStudy_aggregated_fields
  sumDistinct: FieldOfStudy_aggregated_fields
  min: FieldOfStudy_aggregated_fields
  max: FieldOfStudy_aggregated_fields
}

type FieldOfStudy_aggregated_count {
  id: Int
  department_id: Int
  name: Int
  url: Int
  isEnglish: Int
  is2ndDegree: Int
  isLongCycleStudies: Int
  hasWeekendModeOption: Int
}

type FieldOfStudy_aggregated_fields {
  id: Float
  department_id: Float
}

""""""
type version_FieldOfStudy {
  id: ID!
  department_id: JSON
  name: String!
  url: String
  isEnglish: Boolean
  is2ndDegree: Boolean
  isLongCycleStudies: Boolean
  hasWeekendModeOption: Boolean
}

type Subscription {
  directus_files_mutated(event: EventEnum): directus_files_mutated
  Scientific_Circles_Tags_mutated(event: EventEnum): Scientific_Circles_Tags_mutated
  Tags_mutated(event: EventEnum): Tags_mutated
  Posts_Tags_mutated(event: EventEnum): Posts_Tags_mutated
  Scientific_Circles_Links_mutated(event: EventEnum): Scientific_Circles_Links_mutated
  Scientific_Circles_mutated(event: EventEnum): Scientific_Circles_mutated
  Posts_mutated(event: EventEnum): Posts_mutated
  Buildings_mutated(event: EventEnum): Buildings_mutated
  AcademicCalendarData_mutated(event: EventEnum): AcademicCalendarData_mutated
  WeekExceptions_mutated(event: EventEnum): WeekExceptions_mutated
  AboutUs_mutated(event: EventEnum): AboutUs_mutated
  AboutUs_Team_mutated(event: EventEnum): AboutUs_Team_mutated
  AboutUs_Team_Social_Links_mutated(event: EventEnum): AboutUs_Team_Social_Links_mutated
  AboutUs_Solvro_Social_Links_mutated(event: EventEnum): AboutUs_Solvro_Social_Links_mutated
  Departments_mutated(event: EventEnum): Departments_mutated
  FAQ_mutated(event: EventEnum): FAQ_mutated
  FAQ_Types_FAQ_mutated(event: EventEnum): FAQ_Types_FAQ_mutated
  FAQ_Types_mutated(event: EventEnum): FAQ_Types_mutated
  Departments_Links_mutated(event: EventEnum): Departments_Links_mutated
  FieldOfStudy_mutated(event: EventEnum): FieldOfStudy_mutated
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

enum EventEnum {
  create
  update
  delete
}

type Scientific_Circles_Tags_mutated {
  key: ID!
  event: EventEnum
  data: Scientific_Circles_Tags
}

type Tags_mutated {
  key: ID!
  event: EventEnum
  data: Tags
}

type Posts_Tags_mutated {
  key: ID!
  event: EventEnum
  data: Posts_Tags
}

type Scientific_Circles_Links_mutated {
  key: ID!
  event: EventEnum
  data: Scientific_Circles_Links
}

type Scientific_Circles_mutated {
  key: ID!
  event: EventEnum
  data: Scientific_Circles
}

type Posts_mutated {
  key: ID!
  event: EventEnum
  data: Posts
}

type Buildings_mutated {
  key: ID!
  event: EventEnum
  data: Buildings
}

type AcademicCalendarData_mutated {
  key: ID!
  event: EventEnum
  data: AcademicCalendarData
}

type WeekExceptions_mutated {
  key: ID!
  event: EventEnum
  data: WeekExceptions
}

type AboutUs_mutated {
  key: ID!
  event: EventEnum
  data: AboutUs
}

type AboutUs_Team_mutated {
  key: ID!
  event: EventEnum
  data: AboutUs_Team
}

type AboutUs_Team_Social_Links_mutated {
  key: ID!
  event: EventEnum
  data: AboutUs_Team_Social_Links
}

type AboutUs_Solvro_Social_Links_mutated {
  key: ID!
  event: EventEnum
  data: AboutUs_Solvro_Social_Links
}

type Departments_mutated {
  key: ID!
  event: EventEnum
  data: Departments
}

type FAQ_mutated {
  key: ID!
  event: EventEnum
  data: FAQ
}

type FAQ_Types_FAQ_mutated {
  key: ID!
  event: EventEnum
  data: FAQ_Types_FAQ
}

type FAQ_Types_mutated {
  key: ID!
  event: EventEnum
  data: FAQ_Types
}

type Departments_Links_mutated {
  key: ID!
  event: EventEnum
  data: Departments_Links
}

type FieldOfStudy_mutated {
  key: ID!
  event: EventEnum
  data: FieldOfStudy
}